syntax = "proto3";
package adminrpc;

option go_package = "/";


service NodeService {
    rpc Kill(AdminRequest) returns (NodeResponse) {}
    rpc AcceptTransactions(TransactionRequest) returns(NodeResponse){}
    rpc GetBalance(AdminRequest)returns (BalanceResponse){}
}

service PaxosService {
    rpc Prepare(PrepareRequest) returns (PromiseResponse){}
    rpc Accept(AcceptRequest) returns (AcceptedResponse){}
    rpc Commit(CommitRequest) returns (CommitedResponse){}
}

message CommitRequest{
    Ballot ballot_number =1;
}
message CommitedResponse {
    bool success = 1;
}
message PrepareRequest {
    Ballot ballot = 1;
}

message PromiseResponse {
    Ballot ballot_number = 1;  // The ballot number n sent by the proposer
    Ballot accept_num = 2;     // The latest accepted ballot number
    repeated TransactionRequest accept_Val = 3;    // The latest accepted value (e.g., a set of transactions)
    repeated TransactionRequest local = 4;
}

  message AcceptRequest {
    int32 proposalNumber = 1;  // The ballot number n for the proposal
    repeated TransactionRequest value = 2;          // The proposed value (e.g., a set of transactions)
}


message AcceptedResponse {
    int32 proposalNumber = 1;  // The ballot number n of the accepted proposal
}





message AdminRequest {
    string command = 1;
}
message NodeResponse {
    string ack = 1;
}

message TransactionRequest{
    int32 SetNumber =1;
    int32 Id =2;
    int32 From =3;
    int32 To =4;
    int32 Amount =5;
}

message BalanceResponse {
    int32 balance =1;
    int32 nodeID = 2;
}

message Ballot {
    int32 ballotNum = 1;
    int32 nodeID = 2;
}














